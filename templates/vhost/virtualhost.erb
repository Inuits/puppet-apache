<%
  def empty?(value)
    value == '' or value == :undef
  end
  def always_array(var)
    if var.is_a?(Array)
      return var
    elsif var.is_a?(Hash)
      return var.map{ |k,v| "#{k} #{v}" }
    elsif var.is_a?(String)
      return [var]
    else
      return []
    end
  end
-%>
### File managed with puppet ###
## Served by:        '<%= scope.lookupvar('::servername') %>'
## Module:           '<%= scope.to_hash['module_name'] %>'
## Template source:  '<%= template_source %>'

<VirtualHost <%= ip_def -%>:<%= port -%>>

  ServerName  <%= server %>
<%
  server_aliases = always_array(serveraliases)
  server_aliases.each do |srvalias|
-%>
  ServerAlias <%= srvalias %>
<% end -%>
  ServerAdmin <%= serveradmin %>

  DocumentRoot <%= documentroot %>
  <Directory <%= directoryroot %>>
<%
  diropts = always_array(dir_options)
%>
    Options <%= diropts.join(' ')  %>
    AllowOverride All
    Order allow,deny
    Allow from All
  </Directory>

<% if ! empty?(vhost_config) -%>
  ## Custom content. This is NOT created by the Apache::Vhost but has been
  #  configured in the apache::vhost definition.
<%
    vhost_config_arr = always_array(vhost_config)
    count = 0
    vhost_config_arr.each do |cfg|
      count += 1
%>
# Start custom config block <%= count %>
<%= cfg %>
# End custom config block <%= count %>
<%  end -%>
<% end -%>

  ## apache::vhost::mod::*
<% if ! empty?(include_blob) -%>
  Include <%= include_blob %>
<% end %>


  ## Logging ####
<% if ! empty?(accesslog) -%>
  CustomLog <%= log_dir %>/<%= accesslog %> combined
<% end -%>
<% if ! empty?(errorlog) -%>
  LogLevel <%= errorlevel %>
  ErrorLog <%= log_dir %>/<%= errorlog %>
<% end -%>

</VirtualHost>
