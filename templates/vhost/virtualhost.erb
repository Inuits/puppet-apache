<%
  def empty?(value)
    value == '' or value == :undef
  end
  def always_array(var)
    scope.function_always_array(var)
  end
-%>
### File managed with puppet ###
## Served by:        '<%= scope.lookupvar('::servername') %>'
## Module:           '<%= scope.to_hash['module_name'] %>'
## Template source:  'MODULES<%= template_source.gsub(Regexp.new("^#{Puppet::Node::Environment.current[:modulepath].gsub(':','|')}"),"") %>'

<VirtualHost <%= ip_def -%>:<%= vhost_port -%>>

  ServerName  <%= server %>
<%
  if ! empty?(serveraliases)
    server_aliases = always_array(serveraliases)
    server_aliases.each do |srvalias|
-%>
  ServerAlias <%= srvalias %>
<%
    end
  end
-%>
  ServerAdmin <%= serveradmin %>

<% if ! empty?(time_out) %>
  TimeOut <%= time_out %>
<% end -%>

  DocumentRoot <%= documentroot %>
  <Directory <%= directoryroot %>>
<%
  diropts = always_array(dir_options)
%>
    Options <%= diropts.join(' ')  %>
    AllowOverride All
    Order allow,deny
    Allow from All
  </Directory>

<% if ! empty?(vhost_config) -%>
  ## Custom content. This is NOT created by the Apache::Vhost but has been
  #  configured in the apache::vhost definition.
<%
    vhost_config_arr = always_array(vhost_config)
    count = 0
    vhost_config_arr.each do |cfg|
      count += 1
-%>
  # Start custom config block <%= count %>
<%= cfg %>
  # End custom config block <%= count %>
<%  end -%>
<% end -%>

  ## Logging ####
<% if ! empty?(access_log) -%>
  CustomLog <%= log_dir %>/<%= access_log %> <%= log_format %>
<% end -%>
<% if ! empty?(error_log) -%>
  LogLevel <%= errorlevel %>
  ErrorLog <%= log_dir %>/<%= error_log %>
<% end -%>

<% # -- No end here. More files get added -%>
