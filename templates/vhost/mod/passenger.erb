### File (fragment) managed with puppet ###
### Served by:        '<%= scope.lookupvar('::servername') %>'
### Module:           '<%= scope.to_hash['module_name'] %>'
### Template source:  '<%= template_source %>'
<%
  def empty?(value)
    value == '' or value == :undef
  end
  def onoff (var)
    return var if var.is_a?(String)
    if var == true or var == false
      return 'on' if var
      return 'off'
    end
  end
-%>

<% if ! empty?(app_root) -%>
  PassengerAppRoot <%= app_root %>
<% end -%>
<% if ! empty?(spawn_method) -%>
  PassengerSpawnMethod <%= spawn_method %>
<% end -%>
<% if ! empty?(global_queue) -%>
  PassengerUseGlobalQueue <%= onoff(global_queue) -%>
<% end -%>
<% if ! empty?(passenger_enabled) -%>
  PassengerEnabled <%= onoff(passenger_enabled) %>
<% end -%>
<% if ! empty?(upload_buffer_dir) -%>
  PassengerUploadBufferDir <%= upload_buffer_dir -%>
<% end -%>
<% if ! empty?(restart_dir) -%>
  PassengerRestartDir <%= restart_dir %>
<% end -%>
<% if ! empty?(friendly_error_pages) -%>
  PassengerFriendlyErrorPages <%= onoff(friendly_error_pages) %>
<% end -%>
<% if ! empty?(buffer_response) -%>
  PassengerBufferResponse <%= onoff(buffer_response) %>
<% end -%>
<% if ! empty?(user) -%>
  PassengerUser <%= user %>
<% end -%>
<% if ! empty?(group) -%>
  PassengerGroup <%= group %>
<% end -%>

<% if ! empty?(min_instances) -%>
  PassengerMinInstances <%= min_instances %>
<% end -%>
<% if ! empty?(max_requests) -%>
  PassengerMaxRequests <%= max_requests %>
<% end -%>
<% if ! empty?(stat_throttle_rate) -%>
  PassengerStatThrottleRate <%= stat_throttle_rate %>
<% end -%>
<% if ! empty?(pre_start) -%>
  PassengerPreStart <%= pre_start %>
<% end -%>
<% if ! empty?(high_performance) -%>
  PassengerHighPerformance <%= onoff(high_performance) %>
<% end -%>
<% if ! empty?(rails_autodetect) -%>
  RailsAutoDetect <%= onoff(rails_autodetect) %>
<% end -%>
<% if has_variable?('rails_baseuri') and ! empty?(rails_baseuri)
    rails_baseuri = [ rails_baseuri ] unless rails_baseuri.is_a?(Array)
    rails_baseuri.each do |uri|
-%>
  RailsBaseUri <%= uri %>
<%  end -%>
<% end -%>
<% if has_variable?('rails_env') and ! empty?(rails_env)
    rails_env = [ rails_env ] unless rails_env.is_a?(Array)
    rails_env.each do |env|
-%>
  RailsEnv <%= env %>
<%  end -%>
<% end -%>
<% if ! empty?(rack_autodetect) -%>
  RackAutoDetect <%= onoff(rack_autodetect) %>
<% end -%>
<% if has_variable?('rack_baseuri') and ! empty?(rack_baseuri)
    rack_baseuri = [ rack_baseuri ] unless rack_baseuri.is_a?(Array)
    rack_baseuri.each do |uri|
-%>
  RackBaseUri <%= uri %>
<%  end -%>
<% end -%>
<% if has_variable?('rack_env') and ! empty?(rack_env)
    rack_env = [ rack_env ] unless rack_env.is_a?(Array)
    rack_env.each do |env|
-%>
  RackEnv <%= env %>
<%  end -%>
<% end -%>

<% if ! empty?(content) -%>
<%= content %>
<% end -%>

