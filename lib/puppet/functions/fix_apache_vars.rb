# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   
#  Replace %[style] references in data to %{style} references.
#
#  This is a workaround since hiera does not handle the normal
#  escape procedure very well. %%{style} would result in an empty
#  string. Bugs.. you gotta love them.
#  
#
Puppet::Functions.create_function(:'fix_apache_vars') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
  if args.empty?
    raise Puppet::ParseError, 'You must supply 3 arguments (+ optional indent)'
  end
  str = args.shift
  str.gsub(/(%+)\[([^\]]+)\]/) do |match|
    # $1 = '%' in front
    # $2 = between []

    # we always remove one % except if there is only one
    pre = '%' * [ ($1.count('%') - 1), 1 ].max
    # if we have a even number, we do not replace. thats escaped ;)
    if $1.count('%').even?
      "#{pre}[#{$2}]"
    else
      "#{pre}{#{$2}}"
    end
  end

 # str.gsub(/([^%]|^)%(?!%)\[([^\]]+)\]/, '\1%{\2}')


  end
end
