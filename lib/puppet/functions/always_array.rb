# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   
#Makes sure the value is always an array, unless its nil.
#
#If the argument is a hash, we will create an array where each element
#is the key value separated with a space.
#
#
Puppet::Functions.create_function(:'always_array') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

  if args.is_a?(Array) and args.size == 1
    value = args[0]
  else
    value = args
  end

  if value.is_a?(Array)
    return value
  elsif value.is_a?(Hash)
    return value.map{ |k,v| "#{k} #{v}" }
  elsif value.is_a?(String)
    return [value]
  else
    return []
  end


  end
end
